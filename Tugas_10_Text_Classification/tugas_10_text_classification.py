# -*- coding: utf-8 -*-
"""Tugas_10_Text_Classification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ObV2MBbN8xi02ZW7VkxfVh6i5sRZIQVk

# **TRAINING STEP**

## Read Data
"""

import pandas as pd

df = pd.read_csv("dataset_sms_spam.csv")
df.head()

df.shape

df.label.value_counts()

"""## Train the algorithms

### Vectorize the data
"""

from sklearn.feature_extraction.text import TfidfVectorizer

vectorizer = TfidfVectorizer()
vectors = vectorizer.fit_transform(df['Teks'])
words_df = pd.DataFrame(vectors.toarray(), columns=vectorizer.get_feature_names())
words_df.head()

"""### Setting the variables"""

X = words_df
y = df.label

"""# **THE ALGORITHMS**"""

from sklearn import tree

# Commented out IPython magic to ensure Python compatibility.
# %%time
# # Create and train a linear support vector classifier (LinearSVC)
# clf = tree.DecisionTreeClassifier()
# clf = clf.fit(X, y)

"""Test the models"""

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y)

# Commented out IPython magic to ensure Python compatibility.
# %%time
# 
# print("Training Decision Tree")
# clf.fit(X_train, y_train)

"""# **TESTING** **DATA**"""

from sklearn.metrics import confusion_matrix
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.metrics import precision_score, recall_score, accuracy_score, f1_score

y_true = y_test
y_pred = clf.predict(X_test)
matrix = confusion_matrix(y_true, y_pred)

label_names = pd.Series(['0', '1', '2'])
pd.DataFrame(matrix,
     columns='Predicted ' + label_names,
     index='Is ' + label_names)

y_true = y_test
y_pred = clf.predict(X_test)
matrix = confusion_matrix(y_true, y_pred)

label_names = pd.Series(['0', '1', '2'])
pd.DataFrame(matrix,
     columns='Predicted ' + label_names,
     index='Is ' + label_names).div(matrix.sum(axis=1), axis=0)

print(classification_report(y_test,y_pred))

